// create data which is to exported
export const appSamples = [
  {
    "title": "Hello World",
    "code": "import 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return const MaterialApp(\n      debugShowCheckedModeBanner: false,\n      home: Scaffold(\n        body: Center(\n          child: Text('Hello, World!'),\n        ),\n      ),\n    );\n  }\n}\n"
  },
  {
    "title": "Counter App",
    "code": "import 'package:flutter/material.dart';\n\nvoid main() => runApp(const MyApp());\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Flutter Counter',\n      debugShowCheckedModeBanner: false,\n      theme: ThemeData(colorSchemeSeed: Colors.blue, useMaterial3: true),\n      home: const MyHomePage(title: 'Counter App'),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  final String title;\n\n  const MyHomePage({super.key, required this.title});\n\n  @override\n  State<MyHomePage> createState() => _MyHomePageState();\n}\n\nclass _MyHomePageState extends State<MyHomePage> {\n  int _counter = 0;\n\n  void _incrementCounter() {\n    setState(() {\n      _counter++;\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\n        title: Text(widget.title),\n      ),\n      body: Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: <Widget>[\n            const Text('You have pushed the button this many times:'),\n            Text(\n              '$_counter',\n              style: Theme.of(context).textTheme.headlineMedium,\n            ),\n          ],\n        ),\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: _incrementCounter,\n        tooltip: 'Increment',\n        child: const Icon(Icons.add),\n      ),\n    );\n  }\n}"
  },
  {
    "title": "Todo List App",
    "code": "import 'package:flutter/material.dart';\n\nvoid main() => runApp(const TodoApp());\n\nclass TodoApp extends StatelessWidget {\n  const TodoApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Todo List App',\n      debugShowCheckedModeBanner: false,\n      theme: ThemeData(primarySwatch: Colors.teal, useMaterial3: true),\n      home: const TodoListScreen(),\n    );\n  }\n}\n\nclass TodoListScreen extends StatefulWidget {\n  const TodoListScreen({super.key});\n\n  @override\n  State<TodoListScreen> createState() => _TodoListScreenState();\n}\n\nclass _TodoListScreenState extends State<TodoListScreen> {\n  final List<TodoItem> _todos = [];\n  final TextEditingController _textController = TextEditingController();\n\n  void _addTodoItem(String task) {\n    if (task.isNotEmpty) {\n      setState(() {\n        _todos.add(TodoItem(task: task));\n      });\n      _textController.clear();\n    }\n  }\n\n  void _toggleTodoStatus(int index) {\n    setState(() {\n      _todos[index].isDone = !_todos[index].isDone;\n    });\n  }\n\n  void _removeTodoItem(int index) {\n    setState(() {\n      _todos.removeAt(index);\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text('My Todo List'),\n      ),\n      body: Column(\n        children: [\n          Padding(\n            padding: const EdgeInsets.all(16.0),\n            child: Row(\n              children: [\n                Expanded(\n                  child: TextField(\n                    controller: _textController,\n                    decoration: const InputDecoration(\n                      hintText: 'Enter a new todo...',\n                      border: OutlineInputBorder(),\n                    ),\n                    onSubmitted: _addTodoItem,\n                  ),\n                ),\n                const SizedBox(width: 10),\n                ElevatedButton(\n                  onPressed: () => _addTodoItem(_textController.text),\n                  child: const Text('Add'),\n                ),\n              ],\n            ),\n          ),\n          Expanded(\n            child: ListView.builder(\n              itemCount: _todos.length,\n              itemBuilder: (context, index) {\n                final todo = _todos[index];\n                return ListTile(\n                  leading: Checkbox(\n                    value: todo.isDone,\n                    onChanged: (bool? value) {\n                      _toggleTodoStatus(index);\n                    },\n                  ),\n                  title: Text(\n                    todo.task,\n                    style: TextStyle(\n                      decoration: todo.isDone\n                          ? TextDecoration.lineThrough\n                          : TextDecoration.none,\n                      color: todo.isDone ? Colors.grey : null,\n                    ),\n                  ),\n                  trailing: IconButton(\n                    icon: const Icon(Icons.delete, color: Colors.red),\n                    onPressed: () => _removeTodoItem(index),\n                  ),\n                );\n              },\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\nclass TodoItem {\n  String task;\n  bool isDone;\n\n  TodoItem({required this.task, this.isDone = false});\n}\n"
  }
]

